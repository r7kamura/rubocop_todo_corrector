# frozen_string_literal: true

RSpec.describe RubocopTodoCorrector::Commands::Remove do
  describe '.call' do
    subject do
      described_class.call(
        cop_name: 'Style/StringConcatenation',
        rubocop_todo_path: rubocop_todo_path
      )
    end

    before do
      allow(File).to receive(:write)
    end

    let(:rubocop_todo_path) do
      'spec/fixtures/dummy_rubocop_todo.yml'
    end

    context 'without existent .rubocop_todo.yml' do
      let(:rubocop_todo_path) do
        'spec/fixtures/non_existent_rubocop_todo_path.yml'
      end

      it 'raises error' do
        expect { subject }.to raise_error(RuntimeError)
      end
    end

    context 'with valid condition' do
      it 'removes specified cop name section from .rubocop_todo.yml' do
        subject
        expect(File).to have_received(:write).with(
          'spec/fixtures/dummy_rubocop_todo.yml',
          <<~YAML
            # This configuration was generated by
            # `rubocop --auto-gen-config --exclude-limit 9999 --no-offense-counts --no-auto-gen-timestamp`
            # using RuboCop version 1.23.0.
            # The point is for the user to remove these configuration records
            # one by one as the offenses are removed from the code base.
            # Note that changes in the inspected code, or installation of new
            # versions of RuboCop, may require this file to be generated again.

            # Offense count: 1
            # Configuration parameters: IgnoredMethods.
            Lint/AmbiguousBlockAssociation:
              Exclude:
                - 'foo.rb'

            # Offense count: 2
            # Cop supports --auto-correct.
            # Configuration parameters: EnforcedStyle, ConsistentQuotesInMultiline.
            # SupportedStyles: single_quotes, double_quotes
            Style/StringLiterals:
              Exclude:
                - 'foo.rb'
                - 'bar.rb'
          YAML
        )
      end
    end
  end
end
