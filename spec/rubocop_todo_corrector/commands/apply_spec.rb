# frozen_string_literal: true

RSpec.describe RubocopTodoCorrector::Commands::Apply do
  describe '.call' do
    subject do
      described_class.call(
        cop_name: 'Style/StringLiterals',
        only_safe:,
        rubocop_todo_path: 'spec/fixtures/dummy_rubocop_todo.yml',
        temporary_gemfile_path: 'tmp/Gemfile_rubocop_todo_corrector.rb'
      )
    end

    before do
      allow(File).to receive(:write)
      allow(Kernel).to receive(:system)
    end

    let(:only_safe) do
      true
    end

    context 'with valid condition' do
      it 'updates ToDo file and runs autocorrection' do
        subject
        expect(File).to have_received(:write).with(
          'spec/fixtures/dummy_rubocop_todo.yml',
          <<~YAML.rstrip
            # This configuration was generated by
            # `rubocop --auto-gen-config --exclude-limit 9999 --no-offense-counts --no-auto-gen-timestamp`
            # using RuboCop version 1.23.0.
            # The point is for the user to remove these configuration records
            # one by one as the offenses are removed from the code base.
            # Note that changes in the inspected code, or installation of new
            # versions of RuboCop, may require this file to be generated again.

            # Offense count: 1
            # Configuration parameters: IgnoredMethods.
            Lint/AmbiguousBlockAssociation:
              Exclude:
                - '1.rb'

            # Offense count: 3
            # Cop supports --auto-correct-all.
            Style/SafeNavigation:
              Exclude:
                - '1.rb'
                - '2.rb'
                - '3.rb'

            # Offense count: 4
            # Cop supports --auto-correct.
            # Configuration parameters: Mode.
            Style/StringConcatenation:
              Exclude:
                - '1.rb'
                - '2.rb'
                - '3.rb'
                - '4.rb'
          YAML
        )
        expect(Kernel).to have_received(:system).with(
          { 'BUNDLE_GEMFILE' => 'tmp/Gemfile_rubocop_todo_corrector.rb' },
          'bundle exec rubocop --force-exclusion --auto-correct 1.rb 2.rb'
        )
      end
    end

    context 'with only_safe: false' do
      let(:only_safe) do
        false
      end

      it 'runs woth --auto-correct-all' do
        subject
        expect(Kernel).to have_received(:system).with(
          { 'BUNDLE_GEMFILE' => 'tmp/Gemfile_rubocop_todo_corrector.rb' },
          'bundle exec rubocop --force-exclusion --auto-correct-all 1.rb 2.rb'
        )
      end
    end
  end
end
